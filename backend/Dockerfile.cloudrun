# GCP Cloud Run 최적화 Dockerfile
FROM node:20-alpine AS builder

WORKDIR /app

# 의존성 파일 복사
COPY package*.json ./

# 의존성 설치
RUN npm ci --only=production && npm cache clean --force

# 소스 코드 복사
COPY . .

# TypeScript 빌드
RUN npm run build

# === Production Stage ===
FROM node:20-alpine

# dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# 비root 사용자 생성
RUN addgroup -g 1001 -S nodejs && adduser -S nestjs -u 1001

WORKDIR /app

# 프로덕션 의존성만 설치
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# 빌드 결과물 복사
COPY --from=builder --chown=nestjs:nodejs /app/dist ./dist
COPY --from=builder --chown=nestjs:nodejs /app/node_modules ./node_modules

# 비root 사용자로 전환
USER nestjs

# Cloud Run은 PORT 환경변수로 포트를 지정
ENV PORT=8080
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:8080/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"

# dumb-init를 사용하여 프로세스 시작
ENTRYPOINT ["dumb-init", "--"]

# Cloud Run에서 시작
CMD ["node", "dist/main.js"]
